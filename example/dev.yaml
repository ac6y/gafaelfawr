# Settings intended for a development server running on port 8000 on
# localhost.  Copy this file to the top level of a checkout, fill in the
# GitHub information, create the necessary secrets, and then run tox -e
# run to bring up a test server.
#
# WARNING: The session secret and RSA private key included in this package
# are published to the entire world and are therefore not secure in any
# way.  Use them ONLY for testing and ONLY with a development server
# exposed only to localhost.
#
# Anyone in the world can decrypt and forge any identity information of
# any server that uses these settings.

global:
  realm: "localhost"
  loglevel: "DEBUG"
  session_secret_file: "example/secrets/session-secret"

  # This Redis will be started by the docker-compose.yaml file at the top
  # level of the repository.
  redis_url: "redis://localhost:6379/0"

  # Sample values.  You can replace these with anything you want to use
  # for a scope.
  known_scopes:
    "admin": "Administrative access"
    "read:all": "Can read anything"

  # To get scopes based on GitHub team membership, replace <org> with the
  # name of the GitHub organization and <team> with the name of the team
  # in that organization.  (This may be truncated for long names; see the
  # manual.)  Members of that team will then get the scope listed on the
  # left.  Add as many entries as you'd like.
  group_mapping:
    "admin":
      - "<org>-<team>"
    "read:all":
      - "<org>-<other-team>"

  # To get these values, go to Settings > Developer Settings for either a
  # GitHub user or an organization, go into OAuth Apps, and create a new
  # application.
  github:
    client_id: "<github-client-id>"
    client_secret: "<github-client-secret>"

  issuer:
    iss: "http://localhost:8000"
    key_id: "localhost-key-id"
    aud:
      default: "http://localhost"
      internal: "http://localhost/internal"
    key_file: "example/secrets/issuer-key"
