# All example.com values in this example should be changed to the domain
# name under which you're running Gafaelfawr.

default:
  realm: "example.com"

  # Generate this with cryptography.fernet.Fernet.generate_key().
  session_secret_file: "/path/to/session-secret"

  # The URL of a Redis instance used for storing sessions.
  redis_url: "redis://redis.example.com:6379/0"

  # Sample values for scopes.  You can replace these with anything you
  # want to use for a scope.  Used to populate the new token creation
  # page.
  known_scopes:
    "admin": Administrative access
    "read:all": Can read anything

  # Map scopes to lists of groups that provide that scope.
  #
  # With an OpenID Connect provider, the groups will be taken from an
  # isMemberOf claim in the token returned by that provider.
  #
  # To get scopes based on GitHub team membership, replace <org> with the
  # name of the GitHub organization and <team> with the name of the team
  # in that organization.  (This may be truncated for long names; see the
  # manual.)  Members of that team will then get the scope listed on the
  # left.  Add as many entries as you'd like.
  group_mapping:
    "admin":
      - "<org>-<team>"
    "read:all":
      - "<org>-<other-team>"

  # To get these values, go to Settings > Developer Settings for either a
  # GitHub user or an organization, go into OAuth Apps, and create a new
  # application.
  #
  # Delete if you don't want to use GitHub authentication.
  github:
    client_id: "<github-client-id>"
    client_secret_file: "/path/to/github-client-secret"

  # To get these values, register with an OpenID Connect provider and use
  # the values that they provide.  This example is for CILogon; many of
  # the values will need to be different for another provider.
  #
  # Delete if you don't want to use OpenID Connect authentication.  Either
  # this stanza or the github stanza must be provided.
  oidc:
    client_id: "cilogon:/client_id/..."
    client_secret_file: "/path/to/oidc-client-secret"
    login_url: "https://cilogon.org/authorize"
    redirect_url: "https://example.com/login"
    token_url: "https://cilogon.org/oauth2/token"
    scopes:
      - "email"
      - "org.cilogon.userinfo"
    issuer: "https://cilogon.org"
    audience: "cilogon:/client_id/..."
    key_ids:
      - "244B235F6B28E34108D101EAC7362C4E"

  # Configuration for the internal issuer.
  issuer:
    iss: "https://example.com"
    key_id: "example-key-id"
    aud:
      default: "https://example.com"
      internal: "https://example.com/internal"
    key_file: "/path/to/issuer-key"
