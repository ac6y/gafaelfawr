# Example configuration file for Gafaelfawr using GitHub.
#
# The recommended installation method is to use the Helm chart, which will
# generate this file based on Helm values as a ConfigMap.  However, this
# example may be useful if you need to modify the Helm chart or
# hand-generate the documentation.
#
# All example.com values in this example should be changed to the domain
# name under which you're running Gafaelfawr.

# Realm for WWW-Authenticate 401 error.
realm: "example.com"

# Generate this with cryptography.fernet.Fernet.generate_key().
session_secret_file: "/path/to/session-secret"

# Replace <password> with the database password and example.com with the
# hostname of the PostgreSQL database.  In environments where the
# configuration file is not private (such as when it's taken from a
# Kubernetes ConfigMap), use the GAFAELFAWR_DATABASE_URL environment
# variable to set this parameter and don't include it in the settings
# file.
database_url: "postgresql://gafaelfawr:<password>@example.com/gafaelfawr"

# Replace this with a list of users who should have admin rights when
# bootstrapping a fresh database.
initial_admins:
  - example

# The URL of and password for a Redis instance used for storing sessions.
redis_url: "redis://redis.example.com:6379/0"
redis_password_file: "/path/to/redis-password"

# The IP address ranges used internally in the Kubernetes cluster.  Used
# to determine the external IP address for logging purposes.
proxies:
  - "10.0.0.0/8"

# Where to send the user after logging out.
after_logout_url: "https://example.com/"

# Configuration for the internal issuer.  This controls the JWTs that are
# generated internally by Gafaelfawr and passed to the protected
# applications.
issuer:
  iss: "https://example.com"
  key_id: "example-key-id"
  aud: "https://example.com"
  key_file: "/path/to/issuer-key"
  exp_minutes: 1440 # 1 day

# To get these values, go to Settings > Developer Settings for either a
# GitHub user or an organization, go into OAuth Apps, and create a new
# application.
github:
  client_id: "<github-client-id>"
  client_secret_file: "/path/to/github-client-secret"

# Sample values for scopes.  You can replace these with anything you want
# to use for a scope.  Used to populate the new token creation page.
known_scopes:
  "admin": "Administrative access"
  "read:all": "Can read anything"

# Map scopes to lists of groups that provide that scope.
#
# With an OpenID Connect provider, the groups will be taken from an
# isMemberOf claim in the token returned by that provider.
#
# To get scopes based on GitHub team membership, replace <org> with the
# name of the GitHub organization and <team> with the name of the team in
# that organization.  (This may be truncated for long names; see the
# manual.)  Members of that team will then get the scope listed on the
# left.  Add as many entries as you'd like.
group_mapping:
  "admin":
    - "<org>-<team>"
  "read:all":
    - "<org>-<other-team>"
