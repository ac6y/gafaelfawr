CREATE TYPE adminchange AS ENUM ('add', 'remove');
CREATE TYPE tokentype AS ENUM ('session', 'user', 'notebook', 'internal', 'service', 'oidc');
CREATE TYPE tokenchange AS ENUM ('create', 'revoke', 'expire', 'edit');

CREATE TABLE admin (
	username VARCHAR(64) NOT NULL,
	PRIMARY KEY (username)
)

;

CREATE TABLE admin_history (
	id SERIAL NOT NULL,
	username VARCHAR(64) NOT NULL,
	action adminchange NOT NULL,
	actor VARCHAR(64) NOT NULL,
	ip_address INET NOT NULL,
	event_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
	PRIMARY KEY (id)
)

;
CREATE INDEX admin_history_by_time ON admin_history (event_time, id);

CREATE TABLE token (
	token VARCHAR(64) COLLATE "C" NOT NULL,
	username VARCHAR(64) NOT NULL,
	token_type tokentype NOT NULL,
	token_name VARCHAR(64),
	scopes VARCHAR(512) NOT NULL,
	service VARCHAR(64),
	created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
	last_used TIMESTAMP WITHOUT TIME ZONE,
	expires TIMESTAMP WITHOUT TIME ZONE,
	PRIMARY KEY (token),
	UNIQUE (username, token_name)
)

;
CREATE INDEX token_by_username ON token (username, token_type);

CREATE TABLE token_auth_history (
	id SERIAL NOT NULL,
	token VARCHAR(64) NOT NULL,
	username VARCHAR(64) NOT NULL,
	token_type tokentype NOT NULL,
	token_name VARCHAR(64),
	parent VARCHAR(64),
	scopes VARCHAR(512),
	service VARCHAR(64),
	ip_address INET,
	event_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
	PRIMARY KEY (id)
)

;
CREATE INDEX token_auth_history_by_username ON token_auth_history (username, event_time, id);
CREATE INDEX token_auth_history_by_time ON token_auth_history (event_time, id);
CREATE INDEX token_auth_history_by_token ON token_auth_history (token, event_time, id);

CREATE TABLE token_change_history (
	id SERIAL NOT NULL,
	token VARCHAR(64) NOT NULL,
	username VARCHAR(64) NOT NULL,
	token_type tokentype NOT NULL,
	token_name VARCHAR(64),
	parent VARCHAR(64),
	scopes VARCHAR(512) NOT NULL,
	service VARCHAR(64),
	expires TIMESTAMP WITHOUT TIME ZONE,
	actor VARCHAR(64),
	action tokenchange NOT NULL,
	old_token_name VARCHAR(64),
	old_scopes VARCHAR(512),
	old_expires TIMESTAMP WITHOUT TIME ZONE,
	ip_address INET,
	event_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
	PRIMARY KEY (id)
)

;
CREATE INDEX token_change_history_by_time ON token_change_history (event_time, id);
CREATE INDEX token_change_history_by_username ON token_change_history (username, event_time, id);
CREATE INDEX token_change_history_by_token ON token_change_history (token, event_time, id);

CREATE TABLE subtoken (
	child VARCHAR(64) NOT NULL,
	parent VARCHAR(64),
	PRIMARY KEY (child),
	FOREIGN KEY(child) REFERENCES token (token) ON DELETE CASCADE,
	FOREIGN KEY(parent) REFERENCES token (token) ON DELETE SET NULL
)

;
CREATE INDEX subtoken_by_parent ON subtoken (parent);
